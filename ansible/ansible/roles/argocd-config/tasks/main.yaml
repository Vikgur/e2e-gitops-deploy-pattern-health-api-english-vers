- name: Check if the Argo CD configuration directory exists
  ansible.builtin.stat:
    path: "{{ argocd_config_repo_path }}"
  register: config_repo_path

- name: Abort if the Argo CD configuration repository is not found
  ansible.builtin.fail:
    msg: "Argo CD configuration repository not found at path: {{ argocd_config_repo_path }}"
  when: not config_repo_path.stat.exists

- name: Install kustomize via snap (if not already installed)
  ansible.builtin.shell: |
    if ! command -v kustomize &> /dev/null; then
      sudo snap install kustomize
    fi
  tags: [packages]

- name: Apply ConfigMap (argocd-cm.yaml)
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    src: "{{ argocd_config_repo_path }}/argocd/cm/argocd-cm.yaml"
    namespace: "{{ argocd_namespace }}"

- name: Apply RBAC (argocd-rbac-cm.yaml)
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    src: "{{ argocd_config_repo_path }}/argocd/cm/argocd-rbac-cm.yaml"
    namespace: "{{ argocd_namespace }}"

- name: Apply AppProject: stage
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    src: "{{ argocd_config_repo_path }}/argocd/projects/project-stage.yaml"
    namespace: "{{ argocd_namespace }}"

- name: Apply AppProject: prod
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    src: "{{ argocd_config_repo_path }}/argocd/projects/project-prod.yaml"
    namespace: "{{ argocd_namespace }}"

- name: Apply repository: gitops-apps
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    src: "{{ argocd_config_repo_path }}/argocd/repos/repo-gitops-apps.yaml"
    namespace: "{{ argocd_namespace }}"

- name: Apply repository: helm-charts
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    src: "{{ argocd_config_repo_path }}/argocd/repos/repo-helm-charts.yaml"
    namespace: "{{ argocd_namespace }}"

- name: Apply secret with password (if login/password mode is selected)
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    src: "{{ argocd_config_repo_path }}/argocd/secrets/argocd-secret.yaml"
    namespace: "{{ argocd_namespace }}"
  when: argocd_sso_mode | default('dex') == 'dex'

- name: Apply OIDC configuration (if oidc mode is selected)
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    src: "{{ argocd_config_repo_path }}/argocd/cm/oidc-config.yaml"
    namespace: "{{ argocd_namespace }}"
  when: argocd_sso_mode | default('dex') == 'oidc'

- name: Apply secret with password (if login/password mode is selected)
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    namespace: "{{ argocd_namespace }}"
    src: "{{ role_path }}/files/argocd/argocd-secret.yaml"
  when: argocd_sso_mode == 'login'
